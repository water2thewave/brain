{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/d3-dispatch/src/dispatch.js","../../node_modules/d3-timer/src/timer.js","../../node_modules/d3-fetch/src/json.js","../../node_modules/d3-quadtree/src/add.js","../../node_modules/d3-quadtree/src/quad.js","../../node_modules/d3-quadtree/src/x.js","../../node_modules/d3-quadtree/src/y.js","../../node_modules/d3-quadtree/src/quadtree.js","../../node_modules/d3-force/src/constant.js","../../node_modules/d3-force/src/jiggle.js","../../node_modules/d3-force/src/collide.js","../../node_modules/d3-force/src/link.js","../../node_modules/d3-quadtree/src/cover.js","../../node_modules/d3-quadtree/src/data.js","../../node_modules/d3-quadtree/src/extent.js","../../node_modules/d3-quadtree/src/find.js","../../node_modules/d3-quadtree/src/remove.js","../../node_modules/d3-quadtree/src/root.js","../../node_modules/d3-quadtree/src/size.js","../../node_modules/d3-quadtree/src/visit.js","../../node_modules/d3-quadtree/src/visitAfter.js","../../node_modules/d3-force/src/lcg.js","../../node_modules/d3-force/src/simulation.js","../../src/KnowledgeGraph.svelte","../../node_modules/d3-force/src/center.js","../../node_modules/d3-force/src/manyBody.js","../../node_modules/d3-force/src/x.js","../../node_modules/d3-force/src/y.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  if (response.status === 204 || response.status === 205) return;\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","<script>\r\n\texport let width, height, editMode;\r\n  import * as d3 from \"d3\";\r\n  import { prevent_default } from \"svelte/internal\";\r\n\r\n  const jsonUrl = 'data.json';\r\n  const defaultSize = 30;\r\n\r\nvar nodes = [];\r\nvar links = [];\r\n\r\n$: editModeClass = editMode ? 'edit-mode' : '';\r\n\r\nvar selectedNode;\r\n\r\nvar tooltipText = \"blank tooltip\";\r\nvar tooltipVisibility = \"hidden\";\r\n\r\nvar simulation = d3.forceSimulation();\r\n\r\nloadLocalStorage()\r\n  .then((obj) => {\r\n    console.log(`Loaded json from localstorage`, obj);\r\n    nodes = obj.nodes;\r\n    links = obj.links;\r\n  })\r\n  .catch((e) => {       // load default data\r\n    console.info(e.message);\r\n    console.log('Loading default data');\r\n    d3.json(jsonUrl)\r\n      .then ((obj) => {\r\n        nodes = obj.nodes;\r\n        links = obj.links;\r\n        updateSimulation();\r\n      })\r\n      .catch(console.error);\r\n  })\r\n  .finally( () => updateSimulation());\r\n\r\nfunction updateSimulation() {\r\n  setupSimulation();\r\n  simulation.alpha(0.3).alphaTarget(0).restart();\r\n}\r\n\r\nfunction setupSimulation() {\r\n  simulation\r\n    .nodes(nodes)\r\n    .force(\"center\", d3.forceCenter().x(width / 2).y(height / 2))\r\n    .force(\"charge\", d3.forceManyBody() // Acts on the node of the graph (attraction of nodes)\r\n      .strength((d) => -1*d.radius*20 || -1*defaultSize*20 ))\r\n    .force(\"collide\", d3.forceCollide()\r\n      .strength(1)\r\n      .radius((d) => d.radius) // Acts on the node of the graph (avoid collapsing)\r\n      .iterations(8))\r\n    .force(\"x\", d3.forceX().strength(width < 700 ? .2 * height / width : 0.05)) // Acts as gravity on nodes (display in canvas)\r\n    .force(\"y\", d3.forceY().strength(width < 700 ? .16 * width / height : 0.05))\r\n    .force(\"link\", d3.forceLink() // Acts on the link of the graph\r\n      .id((d) => (d.id))\r\n      .links(links))\r\n    .on(\"tick\", () => ticked());\r\n}\r\n\r\nfunction ticked() {\r\n  // assigning nodes back to nodes triggers svelte to re-read for bindings\r\n  nodes = nodes;\r\n  links = links;\r\n}\r\n\r\nfunction handleEditNodeClick(event, d) {\r\n  const leftClicked = event.button == 0 || 1 == event.button&1;\r\n  const rightClicked = event.button == 2 || 1 == event.button&3;\r\n  if (leftClicked) {\r\n    selectedNode = d;\r\n  }\r\n  else if (rightClicked) {\r\n    console.log(`Edit mode: Right button clicked \"${d.word}\"`);\r\n  }\r\n  else {\r\n    console.log(`Edit mode: Some button clicked \"${d.word}\"`);\r\n  }\r\n}\r\n\r\nfunction handleNodeClick(event, d) {\r\n  if (editMode) return handleEditNodeClick(event, d);\r\n\r\n  const leftClicked = event.button == 0 || 1 == event.button&1;\r\n  const rightClicked = event.button == 2 || 1 == event.button&3;\r\n  if (leftClicked) {\r\n    // TODO show max depth of 2\r\n    traverse({root: d}, (n, level) => {\r\n      // set brightness to max depth\r\n      const maxLevel = 3;\r\n      let newRadius = level > maxLevel ? 0 : (1 - (level / maxLevel)) * defaultSize;\r\n      n.radius = newRadius;\r\n    });\r\n    updateSimulation();\r\n\r\n  }\r\n  else if (rightClicked) {\r\n    console.log(`Right button clicked \"${d.word}\"`);\r\n  }\r\n  else {\r\n    console.log(`Some button clicked \"${d.word}\"`);\r\n  }\r\n\r\n}\r\n\r\nfunction handleClickOutside(event, d) {\r\n  // when we click outside, we want to create a node\r\n\r\n}\r\n\r\nfunction createNewNode(clickedNode) {\r\n  const newId = nodes.length;\r\n\r\n  let node = { \r\n    \"id\": newId,\r\n    \"word\": `newNode #${newId}` \r\n  };\r\n\r\n  let link = { \r\n    \"source\": clickedNode.id, \r\n    \"target\": newId \r\n  };\r\n\r\n  nodes.push({...node});\r\n  links.push({...link});\r\n  \r\n  updateSimulation();\r\n  saveToBrowser(nodes, links);\r\n}\r\nfunction handleEditMiddleButton(event, clickedNode) {\r\n  console.log(`Edit mode: Middle button clicked`);\r\n  createNewNode(clickedNode);\r\n}\r\n\r\nfunction handleMiddleButton(event, clickedNode) {\r\n  const middleClicked = event.button == 1 || 1 == event.button&2;\r\n  if (!middleClicked) return;\r\n\r\n  event.preventDefault();\r\n\r\n  if (editMode) return handleEditMiddleButton(event, clickedNode);\r\n\r\n  console.log(`Middle button clicked `);\r\n}\r\n\r\n\r\nfunction traverse(options, callback) {\r\n  // Traverse the graph ignoring starting from root, ignoring link direction.\r\n  const {root} = options;\r\n  const level = options.level || 0;\r\n  const visited = options.visited || {};\r\n  \r\n  if (visited[root.id] == true) return;\r\n\r\n  callback(root, level);\r\n  visited[root.id] = true;\r\n  \r\n  // DFS\r\n  let q = getNeighborsOf(root);\r\n  for (let i in q) {\r\n    let n = q[i];\r\n    traverse({\r\n      root: n, \r\n      level: level+1,\r\n      visited: visited \r\n    }, callback);\r\n  }\r\n}\r\n\r\nfunction getNeighborsOf(n) {\r\n  return links.reduce( (neighbors, link) => {\r\n    let isNeighbor = link.source.id == n.id || link.target.id == n.id;\r\n    if (isNeighbor)\r\n    {\r\n      let neighbor = link.source.id != n.id ? link.source : link.target;\r\n      // console.log({ neighbor: neighbor.word });\r\n      neighbors.push(neighbor);\r\n    }\r\n    return neighbors;\r\n  }, []);\r\n}\r\n\r\nfunction saveToBrowser(nodes, links) {\r\n  // Save to localstorage on each change\r\n  const saveLinks = links.map((link) => {\r\n    let {index, source, target} = link;\r\n    return {source: source.id, target: target.id};\r\n  });\r\n  // const saveNodes = nodes.map(({id, word}) =>  {id, word});\r\n  // const saveData = {nodes: saveNodes, links: saveLinks};\r\n  const saveData = {nodes, links: saveLinks};\r\n  console.log('saved to localStorage', saveData);\r\n  let jsonStr = JSON.stringify(saveData);\r\n  localStorage.setItem('wizard', jsonStr);\r\n}\r\n\r\n\r\nfunction loadLocalStorage() {\r\n return new Promise((resolve, reject) => {\r\n  const key = 'wizard';\r\n  let loadedJson = localStorage.getItem(key);\r\n   if (!loadedJson) {\r\n     throw Error(`Blank json in localstorage for key \"${key}\"`);\r\n   }\r\n   \r\n   try {\r\n     resolve(JSON.parse(loadedJson));\r\n    //  console.log({loadedJson});\r\n   }\r\n   catch (e) {\r\n     console.error({loadedJson})\r\n     throw Error(`Invalid json in localstorage for key \"${key}\"`);\r\n   }\r\n });\r\n}\r\n\r\n    // .on(\"mousemove\", (e,d) => (tooltip.style(\"top\", (e.pageY-10)+\"px\").style(\"left\",(e.pageX+10)+\"px\")))\r\n</script>\r\n\r\n<div class=\"container\">\r\n  </div>\r\n\r\n  <div id=\"knowledge-graph-container\" class=\"svg-container graph-bg {editModeClass}\">\r\n    <svg id=\"knowledge-graph-svg\" class=\"svg-content\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 {width} {height}\">\r\n      <rectangle>\r\n      </rectangle>\r\n      <g id=\"links\">\r\n        {#each links as l}\r\n            <line x1={l.source.x} y1={l.source.y} x2={l.target.x} y2={l.target.y} class=\"link\">\r\n            </line>\r\n        {/each}\r\n      </g>\r\n\r\n      <g id=\"nodes\" data-toggle=\"tooltip\" title={tooltipText}>\r\n        {#each nodes as n}\r\n          <g on:click|preventDefault={(e) => handleNodeClick(e,n)}\r\n            on:mousedown={(e) => handleMiddleButton(e, n)}\r\n\r\n            transform=\"translate({n.x || 0}, {n.y || 50})\" class=\"node\">\r\n\r\n            <circle r={n.radius || defaultSize} class=\"node\"></circle>\r\n            {#if editMode && selectedNode == n}\r\n            <foreignObject x=\"-8\" y=\"6\" width=\"100\" height=\"150\">\r\n              <form on:submit|preventDefault={ () => {\r\n                saveToBrowser(nodes, links);\r\n                selectedNode = null;\r\n              }}>\r\n                <input bind:value={n.word}/>\r\n              </form>\r\n            </foreignObject>\r\n            {:else}\r\n            <text x=\"-8\" y=\"6\">{n.word}</text>\r\n            {/if}\r\n            <title>{n.word}</title>\r\n\r\n          </g>\r\n        {/each}\r\n      </g>\r\n\r\n    </svg>\r\n    <div id=\"knowledge-graph\"></div>\r\n  </div>\r\n\r\n<style>\r\n\t.node {\r\n\t\tstroke: #226a3c;\r\n\t\t/* background-color: burlywood; */\r\n\t\tfill: #563478;\r\n\t}\r\n  \r\n\r\n\t.link {\r\n\t\tstroke: #226a3c;;\r\n\t\t/* background-color: burlywood; */\r\n\t\tfill: #226a3c;\r\n\t}\r\n  \r\n  .edit-mode {\r\n    background-color: rgb(3, 13, 42) !important;\r\n  }\r\n\r\n\t.graph-bg {\r\n\t\tbackground-color: rgb(8, 32, 77);\r\n\t}\r\n\t\r\n\t.svg-container {\r\n\tdisplay: inline-block;\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\tpadding-bottom: 100%;\r\n\tvertical-align: top;\r\n\toverflow: hidden;\r\n}\r\n.svg-content {\r\n\tdisplay: inline-block;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n}\r\n</style>\r\n","export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","\n<script>\n\texport let name;\n\n\timport KnowledgeGraph from './KnowledgeGraph.svelte';\n\n\tlet editMode = false;\n\n\tconst role = 'wizard';\n\tfunction deleteLocalStorage() {\n\t\twindow.localStorage.clear();\n\t\tconsole.log('Localstorage deleted');\n\t}\n\n</script>\n\n\n<div class=\"localstorage container\">\n\t<button class=\"btn btn-primary delete-localstorage\"\n\t\trole=\"button\"\n\t\ton:click={deleteLocalStorage}>\n\t\tDelete localstorage</button>\n\n\t<button \n\tclass=\"btn btn-primary show-localstorage\" type=\"button\" data-toggle=\"collapse\" role=\"button\" aria-expanded=\"true\" aria-controls=\"lscontent\" data-target=\"#lscontent\">\n\n\t\tShow localstorage\n\t</button>\n\t\n\t<h1>Here be elements\n  <button \n\ton:click={() => (editMode = !editMode)}\n  class=\"btn btn-outline-warning\" aria-pressed={editMode} data-toggle=\"button\" type=\"button\" \n    role=\"button\"> ✏️ </button>\n\t</h1>\n\n\t<div class=\"collapse\" id=\"lscontent\">\n\t\t<div class=\"card cardbody\">\n\t\t\t<label for=\"edit-json\"> {role} </label>\n\t\t\t<textarea class=\"edit-json\"> {window.localStorage.getItem(role)} </textarea>\n\t\t\t<a class=\"copy-json btn btn-primary\"> Copy text </a> \n\t\t</div>\n\t</div>\n</div>\n<KnowledgeGraph bind:editMode={editMode} width={window.innerWidth} height={window.innerHeight}></KnowledgeGraph>\n\n\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","SvelteComponent","$destroy","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","dispatch","t","n","arguments","_","test","Error","Dispatch","parseTypenames","typenames","types","trim","split","slice","hasOwnProperty","get","set","concat","prototype","constructor","on","typename","T","copy","that","args","apply","taskHead","taskTail","frame","timeout","interval","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","f","setTimeout","clearNow","Timer","_call","_time","_next","timer","delay","time","restart","wake","e","undefined","timerFlush","t0","t2","t1","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","responseJson","response","ok","status","statusText","json","tree","x","y","isNaN","parent","xm","ym","xp","yp","right","bottom","j","_root","leaf","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","_y","next","Quad","defaultX","defaultY","quadtree","Quadtree","NaN","addAll","leaf_copy","TypeError","stop","treeProto","constant","jiggle","random","vx","vy","find","nodeById","nodeId","child","source","cover","xz","yz","Math","floor","z","visit","extent","radius","x2","y2","q","x3","y3","quads","dx","dy","d2","sqrt","remove","retainer","previous","removeAll","size","visitAfter","initialAngle","PI","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","stepper","step","s","lcg","tick","k","force","fx","fy","initializeNodes","angle","cos","sin","initializeForce","initialize","randomSource","closest","line","t_value","word","text_1","foreignObject","form","create_if_block","defaultSize","g","circle","title","tooltipText","svg","svg_viewBox_value","div0","div2","rectangle","g0","g1","div1","saveToBrowser","links","saveLinks","link","id","saveData","console","log","jsonStr","JSON","stringify","localStorage","setItem","width","height","editMode","selectedNode","d3.forceSimulation","updateSimulation","strength","sx","sy","d3.forceCenter","strengths","distanceMin2","distanceMax2","theta2","accumulate","quad","weight","abs","w","_nodes","_random","distanceMin","distanceMax","theta","d3.forceManyBody","radii","xi","yi","ri","ri2","prepare","rj","r","d3.forceCollide","d3.forceX","d3.forceY","distances","count","bias","min","distance","initializeStrength","initializeDistance","d3.forceLink","handleNodeClick","leftClicked","button","rightClicked","$$invalidate","handleEditNodeClick","traverse","level","newRadius","handleEditMiddleButton","clickedNode","newId","createNewNode","handleMiddleButton","visited","reduce","neighbors","neighbor","reject","key","loadedJson","getItem","parse","error","catch","info","message","fetch","d3.json","finally","editModeClass","innerWidth","innerHeight","role","textarea","button0","button1","h1","button2","label","deleteLocalStorage","o","outros","body"],"mappings":"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"}