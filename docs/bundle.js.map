{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/d3-dispatch/src/dispatch.js","../../node_modules/d3-timer/src/timer.js","../../node_modules/d3-quadtree/src/add.js","../../node_modules/d3-quadtree/src/quad.js","../../node_modules/d3-quadtree/src/x.js","../../node_modules/d3-quadtree/src/y.js","../../node_modules/d3-quadtree/src/quadtree.js","../../node_modules/d3-force/src/constant.js","../../node_modules/d3-force/src/jiggle.js","../../node_modules/d3-force/src/collide.js","../../node_modules/d3-force/src/link.js","../../node_modules/d3-quadtree/src/cover.js","../../node_modules/d3-quadtree/src/data.js","../../node_modules/d3-quadtree/src/extent.js","../../node_modules/d3-quadtree/src/find.js","../../node_modules/d3-quadtree/src/remove.js","../../node_modules/d3-quadtree/src/root.js","../../node_modules/d3-quadtree/src/size.js","../../node_modules/d3-quadtree/src/visit.js","../../node_modules/d3-quadtree/src/visitAfter.js","../../node_modules/d3-force/src/lcg.js","../../node_modules/d3-force/src/simulation.js","../../src/KnowledgeGraph.svelte","../../node_modules/d3-force/src/center.js","../../node_modules/d3-force/src/manyBody.js","../../node_modules/d3-force/src/x.js","../../node_modules/d3-force/src/y.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","<script>\r\n\texport let width, height, editMode, roleData;\r\n  import * as d3 from \"d3\";\r\n  import { prevent_default } from \"svelte/internal\";\r\n\r\n  const defaultSize = 30;\r\n\r\n\r\n$: editModeClass = editMode ? 'edit-mode' : '';\r\n\r\nvar selectedNode;\r\n\r\nvar tooltipText = \"blank tooltip\";\r\nvar tooltipVisibility = \"hidden\";\r\n\r\nvar simulation = d3.forceSimulation();\r\n\r\nvar nodes = [];\r\nvar links = []; \r\n$: nodes = roleData.nodes;\r\n$: links = roleData.links;\r\nconsole.log({roleData});\r\n\r\n$: setupSimulation(nodes, links);\r\n\r\nfunction updateSimulation(nodes, links) {\r\n  setupSimulation();\r\n  simulation.alpha(0.3).alphaTarget(0).restart();\r\n}\r\n\r\nfunction setupSimulation() {\r\n  simulation\r\n    .nodes(nodes)\r\n    .force(\"center\", d3.forceCenter().x(width / 2).y(height / 2))\r\n    .force(\"charge\", d3.forceManyBody() // Acts on the node of the graph (attraction of nodes)\r\n      .strength((d) => -1*d.radius*20 || -1*defaultSize*20 ))\r\n    .force(\"collide\", d3.forceCollide()\r\n      .strength(1)\r\n      .radius((d) => d.radius) // Acts on the node of the graph (avoid collapsing)\r\n      .iterations(8))\r\n    .force(\"x\", d3.forceX().strength(width < 700 ? .2 * height / width : 0.05)) // Acts as gravity on nodes (display in canvas)\r\n    .force(\"y\", d3.forceY().strength(width < 700 ? .16 * width / height : 0.05))\r\n    .force(\"link\", d3.forceLink() // Acts on the link of the graph\r\n      .id((d) => (d.id))\r\n      .links(links))\r\n    .on(\"tick\", () => ticked());\r\n}\r\n\r\nfunction ticked() {\r\n  // assigning nodes back to nodes triggers svelte to re-read for bindings\r\n  nodes = roleData.nodes;\r\n  links = roleData.links;\r\n\r\n  roleData.nodes = nodes;\r\n  roleData.links = links;\r\n}\r\n\r\nfunction handleEditNodeClick(event, d) {\r\n  const leftClicked = event.button == 0 || 1 == event.button&1;\r\n  const rightClicked = event.button == 2 || 1 == event.button&3;\r\n  if (leftClicked) {\r\n    selectedNode = d;\r\n  }\r\n  else if (rightClicked) {\r\n    console.log(`Edit mode: Right button clicked \"${d.word}\"`);\r\n  }\r\n  else {\r\n    console.log(`Edit mode: Some button clicked \"${d.word}\"`);\r\n  }\r\n}\r\n\r\nfunction handleNodeClick(event, d) {\r\n  if (editMode) return handleEditNodeClick(event, d);\r\n\r\n  const leftClicked = event.button == 0 || 1 == event.button&1;\r\n  const rightClicked = event.button == 2 || 1 == event.button&3;\r\n  if (leftClicked) {\r\n    // TODO show max depth of 2\r\n    traverse({root: d}, (n, level) => {\r\n      // set brightness to max depth\r\n      const maxLevel = 3;\r\n      let newRadius = level > maxLevel ? 0 : (1 - (level / maxLevel)) * defaultSize;\r\n      n.radius = newRadius;\r\n    });\r\n    updateSimulation();\r\n\r\n  }\r\n  else if (rightClicked) {\r\n    console.log(`Right button clicked \"${d.word}\"`);\r\n  }\r\n  else {\r\n    console.log(`Some button clicked \"${d.word}\"`);\r\n  }\r\n\r\n}\r\n\r\nfunction handleClickOutside(event, d) {\r\n  // when we click outside, we want to create a node\r\n\r\n}\r\n\r\nfunction createNewNode(clickedNode) {\r\n  const newId = nodes.length;\r\n\r\n  let node = { \r\n    \"id\": newId,\r\n    \"word\": `newNode #${newId}` \r\n  };\r\n\r\n  let link = { \r\n    \"source\": clickedNode.id, \r\n    \"target\": newId \r\n  };\r\n\r\n  roleData.nodes.push({...node});\r\n  roleData.links.push({...link});\r\n  \r\n  updateSimulation();\r\n  // saveToBrowser(nodes, links);\r\n  // TODO fire onChange\r\n}\r\nfunction handleEditMiddleButton(event, clickedNode) {\r\n  console.log(`Edit mode: Middle button clicked`);\r\n  createNewNode(clickedNode);\r\n}\r\n\r\nfunction handleMiddleButton(event, clickedNode) {\r\n  const middleClicked = event.button == 1 || 1 == event.button&2;\r\n  if (!middleClicked) return;\r\n\r\n  event.preventDefault();\r\n\r\n  if (editMode) return handleEditMiddleButton(event, clickedNode);\r\n\r\n  console.log(`Middle button clicked `);\r\n}\r\n\r\n\r\nfunction traverse(options, callback) {\r\n  // Traverse the graph ignoring starting from root, ignoring link direction.\r\n  const {root} = options;\r\n  const level = options.level || 0;\r\n  const visited = options.visited || {};\r\n  \r\n  if (visited[root.id] == true) return;\r\n\r\n  callback(root, level);\r\n  visited[root.id] = true;\r\n  \r\n  // DFS\r\n  let q = getNeighborsOf(root);\r\n  for (let i in q) {\r\n    let n = q[i];\r\n    traverse({\r\n      root: n, \r\n      level: level+1,\r\n      visited: visited \r\n    }, callback);\r\n  }\r\n}\r\n\r\nfunction getNeighborsOf(n) {\r\n  return links.reduce( (neighbors, link) => {\r\n    let isNeighbor = link.source.id == n.id || link.target.id == n.id;\r\n    if (isNeighbor)\r\n    {\r\n      let neighbor = link.source.id != n.id ? link.source : link.target;\r\n      // console.log({ neighbor: neighbor.word });\r\n      neighbors.push(neighbor);\r\n    }\r\n    return neighbors;\r\n  }, []);\r\n}\r\n\r\n\r\n\r\n\r\n    // .on(\"mousemove\", (e,d) => (tooltip.style(\"top\", (e.pageY-10)+\"px\").style(\"left\",(e.pageX+10)+\"px\")))\r\n</script>\r\n\r\n<div class=\"container\">\r\n  </div>\r\n\r\n  <div id=\"knowledge-graph-container\" class=\"svg-container graph-bg {editModeClass}\">\r\n    <svg id=\"knowledge-graph-svg\" class=\"svg-content\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 {width} {height}\">\r\n      <rectangle>\r\n      </rectangle>\r\n      <g id=\"links\">\r\n        {#each links as l}\r\n            <line x1={l.source.x} y1={l.source.y} x2={l.target.x} y2={l.target.y} class=\"link\">\r\n            </line>\r\n        {/each}\r\n      </g>\r\n\r\n      <g id=\"nodes\" data-toggle=\"tooltip\" title={tooltipText}>\r\n        {#each nodes as n}\r\n          <g on:click|preventDefault={(e) => handleNodeClick(e,n)}\r\n            on:mousedown={(e) => handleMiddleButton(e, n)}\r\n\r\n            transform=\"translate({n.x || 0}, {n.y || 50})\" class=\"node\">\r\n\r\n            <circle r={n.radius || defaultSize} class=\"node\"></circle>\r\n            {#if editMode && selectedNode == n}\r\n            <foreignObject x=\"-8\" y=\"6\" width=\"100\" height=\"150\">\r\n              <form on:submit|preventDefault={ () => {\r\n                // saveToBrowser(nodes, links);\r\n                selectedNode = null;\r\n              }}>\r\n                <input bind:value={n.word}/>\r\n              </form>\r\n            </foreignObject>\r\n            {:else}\r\n            <text x=\"-8\" y=\"6\">{n.word}</text>\r\n            {/if}\r\n            <title>{n.word}</title>\r\n\r\n          </g>\r\n        {/each}\r\n      </g>\r\n\r\n    </svg>\r\n    <div id=\"knowledge-graph\"></div>\r\n  </div>\r\n\r\n<style>\r\n\t.node {\r\n\t\tstroke: #226a3c;\r\n\t\t/* background-color: burlywood; */\r\n\t\tfill: #563478;\r\n\t}\r\n  \r\n\r\n\t.link {\r\n\t\tstroke: #226a3c;;\r\n\t\t/* background-color: burlywood; */\r\n\t\tfill: #226a3c;\r\n\t}\r\n  \r\n  .edit-mode {\r\n    background-color: rgb(3, 13, 42) !important;\r\n  }\r\n\r\n\t.graph-bg {\r\n\t\tbackground-color: rgb(8, 32, 77);\r\n\t}\r\n\t\r\n\t.svg-container {\r\n\tdisplay: inline-block;\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\tpadding-bottom: 100%;\r\n\tvertical-align: top;\r\n\toverflow: hidden;\r\n}\r\n.svg-content {\r\n\tdisplay: inline-block;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n}\r\n</style>\r\n","export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","\n<script>\n\texport let name;\n\n\timport KnowledgeGraph from './KnowledgeGraph.svelte';\n\n\tlet editMode = false;\n\tlet\troles = [];\n\t\n\tgetRoles();\n\n\tfunction getRoles() {\n\t\tlet localStorage = window.localStorage;\n\t\tfor ( var i = 0, len = localStorage.length; i < len; ++i ) {\n\t\t\t// let name = localStorage.getItem( localStorage.key(i) ) ;\n\t\t\tlet roleName = localStorage.key(i);\n\t\t\tif (!roles.includes(roleName)) {\n\t\t\t\troles.push(roleName);\n\t\t\t\troles = roles;\n\t\t\t}\n\t\t}\n\t}\nfunction saveRole(role, data) {\n\tconst {nodes, links} = data;\n\tconst saveLinks = links.map((link) => {\n\t\tlet {index, source, target} = link;\n\t\tif (source.id) {\n\t\t\tlet ret = {source: source.id, target: target.id};\n\t\t\treturn ret;\n\t\t}\n\t\telse {\n\t\t\treturn link;\n\t\t}\n\t});\n\t// const saveNodes = nodes.map(({id, word}) =>  {id, word});\n\t// const saveData = {nodes: saveNodes, links: saveLinks};\n\tconst saveData = {nodes, links: saveLinks};\n\tconsole.log('saved to localStorage', role, saveData);\n\tlet jsonStr = JSON.stringify(saveData);\n\twindow.localStorage.setItem(role, jsonStr);\n}\n\n\tlet roleData = {nodes: [], links: []};\n\tvar selectedRole;\n\tconst defaultRole = 'wizard';\n\n\tloadLocalStorage(defaultRole);\n\n\tif (!selectedRole) {\n\t// console.error(`Invalid json in localstorage for role \"${role}\"`, roleData);\n\t\tconsole.log('Loading default data');\n\t\td3.json('data.json')\n\t\t\t.then ((obj) => { \n\t\t\t\troleData = obj;\n\t\t\t\tconsole.log('default data loaded', roleData);\n\t\t\t\tselectedRole = defaultRole;\n\t\t\t\tsaveRole(defaultRole, obj);\n\t\t\t})\n\t\t\t.catch(console.error);\n\t}\n\n\t// $: saveRole(selectedRole, roleData);\n\n\tfunction deleteLocalStorage() {\n\t\twindow.localStorage.clear();\n\t\tconsole.log('Localstorage deleted');\n\t}\n\n\tfunction loadLocalStorage(role) {\n\t\tlet storedData = window.localStorage.getItem(role);\n\t\tif (storedData != null) {\n\t\t\tconsole.log(`Changing class to ${role}`);\n\t\t\troleData = JSON.parse(storedData);\n\t\t\tselectedRole = role;\n\t\t}\n\t\telse {\n\t\t\tconsole.log(`Did not class to ${role}`, roleData);\n\t\t}\n\n\t}\n\n\n\n</script>\n\n\n<div class=\"localstorage container\">\n\t<div class=\"mt-n1 container\">\n\t<button class=\"btn btn-primary delete-localstorage\"\n\t\trole=\"button\"\n\t\ton:click={deleteLocalStorage}>\n\t\tDelete localstorage</button>\n\n\t<button \n\tclass=\"btn btn-primary show-localstorage\" type=\"button\" data-toggle=\"collapse\" role=\"button\" aria-expanded=\"true\" aria-controls=\"lscontent\" data-target=\"#lscontent\">\n\n\t\tShow localstorage\n\t</button>\n\t</div>\n\t\n\t<div class=\"row\">\n\t\t<div class=\"col\">\n\t\t{#each roles as roleName}\n\t\t\t<button class=\"btn btn-outline-primary {roleName == selectedRole ? 'active' : ''}\" type=\"button\" aria-pressed={roleName == selectedRole}\n\t\t\ton:click={(e) => {\n\t\t\t\tloadLocalStorage(roleName);\n\t\t\t}}>{roleName}</button>\n\t\t{/each}\n\t\t</div>\n\t</div>\n\t\n\t<h1>Here be elements\n\t\t\t<form on:submit|preventDefault={(e) => {\n\t\t\t\tconsole.log('SAved  role with enter',  );\n\t\t\t\tsaveRole(selectedRole, roleData);\n\t\t\t\tgetRoles();\n\t\t\t}}>\n\t\t\t<div class=\"input-group mb-3\">\n\t\t\t\t\t<span class=\"input-group-text\" id=\"basic-addon1\">Class</span>\n\t\t\t\t\t<input bind:value={selectedRole} type=\"text\" class=\"form-control\" placeholder=\"{selectedRole}\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n\t\t\t</div>\n\t\t\t</form>\n  <button \n\t\ton:click={() => {\n\t\t\tif (editMode) {\n\t\t\t\tsaveRole(selectedRole, roleData);\n\t\t\t}\n\t\t\teditMode = !editMode;\n\t\t}}\n\t\tclass=\"btn btn-outline-warning\" aria-pressed={editMode} data-toggle=\"button\" type=\"button\" \n    role=\"button\"> ✏️ </button>\n\t</h1>\n\n\t<div class=\"collapse\" id=\"lscontent\">\n\t\t<div class=\"card cardbody\">\n\t\t\t<label for=\"edit-json\"> {selectedRole} </label>\n\t\t\t<textarea class=\"edit-json\"> {JSON.stringify(roleData)} </textarea>\n\t\t\t<a class=\"copy-json btn btn-primary\"> Copy text </a> \n\t\t</div>\n\t</div>\n</div>\n<KnowledgeGraph \nbind:roleData bind:editMode width={window.innerWidth} height={window.innerHeight}></KnowledgeGraph>\n\n\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","bind","index","props","undefined","bound","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","SvelteComponent","$destroy","$on","type","indexOf","splice","$set","$$props","obj","$$set","keys","dispatch","t","n","arguments","_","test","Error","Dispatch","parseTypenames","typenames","types","trim","split","slice","hasOwnProperty","get","set","concat","prototype","constructor","on","typename","T","copy","that","args","apply","taskHead","taskTail","frame","timeout","interval","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","f","setTimeout","clearNow","Timer","_call","_time","_next","timer","delay","time","restart","wake","e","timerFlush","t0","t2","t1","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","tree","x","y","isNaN","parent","xm","ym","xp","yp","right","bottom","j","_root","leaf","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","_y","next","Quad","defaultX","defaultY","quadtree","Quadtree","NaN","addAll","leaf_copy","TypeError","stop","treeProto","constant","jiggle","random","vx","vy","find","nodeById","nodeId","child","source","cover","xz","yz","Math","floor","z","visit","extent","radius","x2","y2","q","x3","y3","quads","dx","dy","d2","sqrt","remove","retainer","previous","removeAll","size","visitAfter","initialAngle","PI","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","stepper","step","s","lcg","tick","k","force","fx","fy","initializeNodes","angle","cos","sin","initializeForce","initialize","randomSource","closest","line","t_value","word","text_1","foreignObject","form","create_if_block","defaultSize","g","circle","title","tooltipText","svg","svg_viewBox_value","div0","div2","rectangle","g0","g1","div1","width","height","editMode","roleData","selectedNode","d3.forceSimulation","links","updateSimulation","setupSimulation","strength","sx","sy","d3.forceCenter","strengths","distanceMin2","distanceMax2","theta2","accumulate","quad","weight","abs","w","_nodes","_random","distanceMin","distanceMax","theta","d3.forceManyBody","radii","xi","yi","ri","ri2","prepare","rj","r","d3.forceCollide","d3.forceX","d3.forceY","distances","count","bias","id","link","min","distance","initializeStrength","initializeDistance","d3.forceLink","handleNodeClick","leftClicked","button","rightClicked","$$invalidate","console","log","handleEditNodeClick","traverse","level","newRadius","handleEditMiddleButton","clickedNode","newId","createNewNode","handleMiddleButton","visited","reduce","neighbors","neighbor","editModeClass","button_class_value","button_aria_pressed_value","innerWidth","innerHeight","JSON","stringify","div6","button0","button1","h1","div3","span","button2","div5","div4","label","textarea","deleteLocalStorage","o","outros","defaultRole","saveRole","role","saveLinks","saveData","jsonStr","localStorage","setItem","roles","getRoles","len","roleName","key","includes","selectedRole","loadLocalStorage","storedData","getItem","parse","d3","json","catch","error","body"],"mappings":"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"}